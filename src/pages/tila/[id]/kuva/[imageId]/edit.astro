---
import { db, eq, Image, User, Category } from "astro:db";
import Layout from "@layouts/Layout.astro";
import ImageCard from "@components/ImageCard.astro";

const { id: categoryId, imageId } = Astro.params;

const { user } = Astro.locals;

if (!user) {
  return Astro.redirect("/");
}

if (!imageId) {
  return new Response(null, {
    status: 404,
    statusText: "Not Found",
  });
}

const data = await db
  .select()
  .from(Image)
  .innerJoin(User, eq(Image.userId, User.id))
  .innerJoin(Category, eq(Image.categoryId, Category.id))
  .where(eq(Image.id, imageId))
  .get();

if (!data) {
  return new Response(null, {
    status: 404,
    statusText: "Not Found",
  });
}

const isAuthor = user.id === data.User.id;

const urlWithoutEdit = `/tila/${categoryId}/kuva/${imageId}`;

if (!isAuthor) {
  return Astro.redirect(urlWithoutEdit);
}

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const title = formData.get("title") as string;
  const gridsize = formData.get("gridsize") as string;
  await db
    .update(Image)
    .set({
      title,
      gridsize,
    })
    .where(eq(Image.id, imageId));
  return Astro.redirect(urlWithoutEdit);
}

if (Astro.request.method === "DELETE" && isAuthor) {
  await db.delete(Image).where(eq(Image.id, imageId));
  return new Response(null, {
    status: 204,
  });
}

const pageTitle = data.Image.title
  ? `${data.Image.title} - ${data.User.fullname}`
  : `Kuva ${data.Image.filename}`;

const cardTransitionName = "card-" + categoryId;
---

<Layout title={pageTitle}>
  <div class="mb-4" transition:animate="none">
    <a
      href=`/tila/${categoryId}`
      class="text-gray-600 dark:text-gray-400 hover:underline font-semibold decoration-gray-500"
      >&lArr; Takaisin osioon "{data.Category.name}"</a
    >
  </div>
  <div transition:name={cardTransitionName}>
    <form method="post">
      <ImageCard
        filename={data.Image.filename}
        imageId={data.Image.id}
        userName={data.User.fullname}
        title={data.Image.title}
        gridsize={data.Image.gridsize}
        editmode={true}
      >
        <label class="block mb-2 text-sm font-bold text-gray-700" for="title">
          Otsikko
          <input
            type="text"
            id="title"
            name="title"
            value={data.Image.title}
            class="font-normal w-full p-2 border-none rounded ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-amber-600 focus:ring-inset"
          />
        </label>
        {
          data.Category.gridSizeImages && (
            <label
              class="block mb-2 text-sm font-bold text-gray-700"
              for="gridsize"
            >
              Ruudukon koko
              <select
                name="gridsize"
                id="gridsize"
                class="font-normal block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-amber-600 sm:max-w-xs sm:text-sm sm:leading-6"
              >
                <option value="" selected={!data.Image.gridsize}>
                  Ei kokoa
                </option>
                <option
                  value="10x10"
                  selected={data.Image.gridsize === "10x10"}
                >
                  10x10
                </option>
                <option
                  value="20x20"
                  selected={data.Image.gridsize === "20x20"}
                >
                  20x20
                </option>
              </select>
            </label>
          )
        }

        <div
          class="text-sm flex justify-end gap-x-4 gap-y-2 items-center flex-wrap mt-4"
        >
          <button
            class="bg-amber-700 hover:bg-amber-600 text-white font-semibold py-2 px-4 rounded"
          >
            Tallenna
          </button>
          <a
            href={`/tila/${categoryId}/kuva/${imageId}`}
            class="bg-gray-600 hover:bg-gray-500 text-white font-semibold py-2 px-4 rounded"
          >
            Peruuta
          </a>
          <button
            id="deleteimagebutton"
            type="button"
            data-category-id={categoryId}
            data-image-id={imageId}
            class="text-red-500 underline font-semibold py-2 px-4"
          >
            Poista kuva
          </button>
        </div>
      </ImageCard>
    </form>
  </div>
</Layout>
<script>
  document.addEventListener("astro:page-load", () => {
    const deleteImageButton = document.getElementById("deleteimagebutton") as HTMLButtonElement;

    if (deleteImageButton) {
      deleteImageButton.addEventListener("click", async () => {
        const confirmDelete = confirm("Haluatko varmasti poistaa kuvan?");
        if (confirmDelete) {
          const categoryId = deleteImageButton.dataset.categoryId;
          const imageId = deleteImageButton.dataset.imageId;

          const deleteResult = await fetch(`/tila/${categoryId}/kuva/${imageId}/edit`, {
            method: "DELETE",
          });

          if (deleteResult.ok) {
            window.location.href = `/tila/${categoryId}`;
          }
        }
      });
    }

    // We can scroll to bottom because coming to this page means we will edit properties of the image
    window.scrollTo(0, document.body.scrollHeight);
  });
</script>

